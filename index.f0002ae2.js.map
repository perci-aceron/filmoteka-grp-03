{"mappings":"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","sources":["src/partials/genre.js","src/partials/t5-loader-functionality.js","src/partials/main-page.js","src/index.js"],"sourcesContent":["export const genresNamesById = [\n    {\n        id: 28,\n        name: \"Action\"\n    },\n    {\n        id: 12,\n        name: \"Adventure\"\n    },  \n    {\n        id: 16,\n        name: \"Animation\"\n    },  \n    {\n        id: 35,\n        name: \"Comedy\"\n    },  \n    {\n        id: 80,\n        name: \"Crime\"\n    },  \n    {\n        id: 99,\n        name: \"Documentary\"\n    },  \n    {\n        id: 18,\n        name: \"Drama\"\n    },  \n    {\n        id: 10751,\n        name: \"Family\"\n    },  \n    {\n        id: 14,\n        name: \"Fantasy\"\n    },  \n    {\n        id: 36,\n        name: \"History\"\n    },  \n    {\n        id: 27,\n        name: \"Horor\"\n    },  \n    {\n        id: 10402,\n        name: \"Music\"\n    },  \n    {\n        id: 9648,\n        name: \"Mystery\"\n    },  \n    {\n        id: 10749,\n        name: \"Romance\"\n    },  \n    {\n        id: 878,\n        name: \"Science Fiction\"\n    },\n    {\n        id: 10770,\n        name: \"TV Movie\"\n    },\n    {\n        id: 53,\n        name: \"Thriller\"\n    },\n    {\n        id: 10752,\n        name: \"War\"\n    },\n    {\n        id: 37,\n        name: \"War\"\n    },\n]\n","export function showLoader() {\n  const loaderElement = document.getElementById('loader');\n  if (loaderElement) {\n    loaderElement.style.display = 'inline-block';\n  }\n}\n\nexport function hideLoader() {\n  const loaderElement = document.getElementById('loader');\n  if (loaderElement) {\n    loaderElement.style.display = 'none';\n  }\n}\n","import { genresNamesById } from './genre';\nimport { showLoader, hideLoader } from './t5-loader-functionality';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9ce408291b177c2a2e598968d33c0b4a';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst movieContainer = document.getElementById('movie-container');\nconst paginationContainer = document.getElementById('pagination-container');\n\nlet currentPage = 1;\nlet itemsPerPage = 18;\n\nfunction createPaginationButtons(totalPages, itemsPerPage) {\n  paginationContainer.innerHTML = '';\n\n  const maxVisiblePages = 5;\n  const ellipsisThreshold = 3;\n\n  let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n  let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\n\n  if (endPage - startPage + 1 < maxVisiblePages) {\n    startPage = Math.max(1, endPage - maxVisiblePages + 1);\n  }\n\n  if (startPage > 1) {\n    const buttonStart = document.createElement('button');\n    buttonStart.textContent = '1';\n    buttonStart.addEventListener('click', () => {\n      handlePaginationButtonClick(1);\n    });\n    paginationContainer.appendChild(buttonStart);\n\n    if (startPage > ellipsisThreshold) {\n      const ellipsisStart = document.createElement('span');\n      ellipsisStart.textContent = '...';\n      paginationContainer.appendChild(ellipsisStart);\n    }\n  }\n\n  for (let i = startPage; i <= endPage; i++) {\n    const button = document.createElement('button');\n    button.textContent = i;\n    button.addEventListener('click', () => {\n      handlePaginationButtonClick(i);\n    });\n\n    paginationContainer.appendChild(button);\n  }\n\n  if (endPage < totalPages) {\n    if (totalPages - endPage > ellipsisThreshold) {\n      const ellipsisEnd = document.createElement('span');\n      ellipsisEnd.textContent = '...';\n      paginationContainer.appendChild(ellipsisEnd);\n\n      const lastPageButton = document.createElement('button');\n      const lastPageNumber = Math.min(totalPages, endPage + ellipsisThreshold);\n      lastPageButton.textContent = lastPageNumber;\n      lastPageButton.addEventListener('click', () => {\n        handlePaginationButtonClick(lastPageNumber);\n      });\n      paginationContainer.appendChild(lastPageButton);\n    } else {\n      const buttonEnd = document.createElement('button');\n      buttonEnd.textContent = totalPages;\n      buttonEnd.addEventListener('click', () => {\n        handlePaginationButtonClick(totalPages);\n      });\n      paginationContainer.appendChild(buttonEnd);\n    }\n  }\n\n  updatePaginationButtons();\n}\n\nexport async function fetchPopularMovies(page, itemsPerPage) {\n  showLoader();\n  try {\n    const response = await fetch(\n      `${BASE_URL}discover/movie?sort_by=popularity.desc&api_key=${API_KEY}&page=${page}`\n    );\n    const data = await response.json();\n    hideLoader();\n    const totalMovies = data.total_results;\n    showMovies(data.results.slice(0, itemsPerPage));\n    createPaginationButtons(data.total_pages, itemsPerPage);\n    console.log(data);\n    console.log(totalMovies);\n  } catch (err) {\n    hideLoader();\n    console.error(err);\n  }\n}\n\nfunction showMovies(data) {\n  movieContainer.innerHTML = ' ';\n\n  data.forEach(movie => {\n    const { title, poster_path, genre_ids, release_date } = movie;\n    const movieCard = document.createElement('div');\n    movieCard.classList.add('movie-card');\n    movieCard.innerHTML = `<img src =\"${IMAGE_URL}${poster_path} alt=\"${title}\"/>\n            <div class=\"movie-card-text\">\n            <h2 class=\"movie-title\">${title}</h2>\n            <p class=\"movie-card-genre\">${getGenre(genre_ids)} \n            <span class=\"movie-release\">| ${getMovieReleaseDate(\n              release_date\n            )}</span>\n            </p>\n            </div>`;\n    movieContainer.appendChild(movieCard);\n  });\n}\n\nfunction getGenre(movieGenre) {\n  return movieGenre\n    .map(id => genresNamesById.find(g => g.id === id).name)\n    .join(',');\n}\n\nfunction getMovieReleaseDate(year) {\n  const movieDate = new Date(year);\n  return movieDate.getFullYear();\n}\n\nfunction updatePaginationButtons() {\n  const buttons = paginationContainer.querySelectorAll('button');\n  buttons.forEach((button, index) => {\n    if (index + 1 === currentPage) {\n      button.classList.add('clicked');\n    } else {\n      button.classList.remove('clicked');\n    }\n  });\n}\n\nfunction handlePaginationButtonClick(pageNumber) {\n  currentPage = pageNumber;\n  fetchPopularMovies(currentPage, itemsPerPage);\n  updatePaginationButtons();\n}\n\nfetchPopularMovies(currentPage, itemsPerPage);\n\n","import { fetchPopularMovies } from './partials/main-page';\nimport { showLoader, hideLoader } from './partials/t5-loader-functionality';\n// import { showWatchedMovies, showQueueMovies } from './partials/t3-library-page';\n\nconst page = 1;\nconst itemsPerPage = 18;\n\nfetchPopularMovies(page, itemsPerPage);\n\nshowLoader();\n\nsetTimeout(() => {\n  hideLoader();\n}, 3000);\n\n// showWatchedMovies();\n// showQueueMovies();\n"],"names":["$3fc9316439801a9e$export$8fb3d1a8ee781306","id","name","$c371be9fd80fdd56$export$56525cbb1fcd885c","loaderElement","document","getElementById","style","display","$c371be9fd80fdd56$export$5cee2c2772922923","$76cf09a021622699$var$movieContainer","$76cf09a021622699$var$paginationContainer","$76cf09a021622699$var$currentPage","async","$76cf09a021622699$export$225b489b0d997c20","page","itemsPerPage1","response","fetch","data","json","totalMovies","total_results","innerHTML","forEach","movie","title","poster_path","genre_ids","release_date","movieCard","createElement","year","movieGenre","classList","add","map","find","g","join","Date","getFullYear","appendChild","$76cf09a021622699$var$showMovies","results","slice","totalPages","itemsPerPage","startPage","Math","max","floor","maxVisiblePages","endPage","min","buttonStart","textContent","addEventListener","$76cf09a021622699$var$handlePaginationButtonClick","ellipsisStart","i","button","ellipsisEnd","lastPageButton","lastPageNumber","buttonEnd","$76cf09a021622699$var$updatePaginationButtons","$76cf09a021622699$var$createPaginationButtons","total_pages","console","log","err","error","querySelectorAll","index","remove","pageNumber","setTimeout"],"version":3,"file":"index.f0002ae2.js.map"}